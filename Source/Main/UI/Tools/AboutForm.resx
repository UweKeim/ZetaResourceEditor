<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="DevExpress.Data.v22.2" name="DevExpress.Data.v22.2, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="pictureEdit1.EditValue" type="DevExpress.Utils.Svg.SvgImage, DevExpress.Data.v22.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFlEZXZFeHByZXNzLkRhdGEudjIyLjIsIFZlcnNpb249MjIuMi42
        LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjg4ZDE3NTRkNzAwZTQ5YQUBAAAAHURl
        dkV4cHJlc3MuVXRpbHMuU3ZnLlN2Z0ltYWdlAQAAAAREYXRhBwICAAAACQMAAAAPAwAAAEoFAAAC77u/
        PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4NCjxzdmcgd2lkdGg9IjEwMjRweCIg
        aGVpZ2h0PSIxMDI0cHgiIHZpZXdCb3g9IjAgMCAxMDI0MCAxMDI0MCIgeG1sbnM9Imh0dHA6Ly93d3cu
        dzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIg
        eG1sOnNwYWNlPSJwcmVzZXJ2ZSIgY2xpcC1ydWxlPSJldmVuT2RkIj4NCiAgPHBhdGggZD0iTTIyNDAg
        NjcyMGwzMjEgMGM0LDkwMSA0OCwxOTIwIDQ0OSwxOTIwIDMzMCwwIDQ0NiwtNDAxIDQ4NywtODU4IDIs
        LTIwIDE4LC0zNSAzOSwtMzYgMjAsLTEgMzcsMTMgNDEsMzIgNzYsNDE3IDI0NCw3NDIgNTgzLDc0MiAy
        NDgsMCA0OTUsLTUwMyA1OTUsLTExNzYgMywtMjAgMjAsLTM0IDQwLC0zNCAyMCwwIDM3LDE1IDM5LDM1
        IDY4LDU2MyAyNDgsOTY4IDYwNiw5NzUgMjMwLDUgNDYxLC0xNjMgNTcyLC0zNzcgOCwtMTYgMjYsLTI1
        IDQzLC0yMSAxOCw0IDMxLDE4IDMyLDM2IDIzLDI5NCAxMTcsNjIwIDUwMyw2MDIgMjcwLC0xMiAzNzgs
        LTQ1NSA0MjEsLTg3MyAyLC0xOSAxOCwtMzQgMzcsLTM2IDIwLC0xIDM3LDEyIDQyLDMxIDY4LDI4OCA1
        Nyw0MDggMjcxLDQwOCAyNDgsMCAzMDUsLTcyOSAzMTYsLTEzNzBsMzIzIDBjMTE2LDAgMjI2LC0zMSAz
        MjAsLTg2bDAgMjMyNiAwIDMyMGMwLDE3NiAtMTQ0LDMyMCAtMzIwLDMyMCAtMTkyMCwwIC0zODQwLDAg
        LTU3NjAsMCAtMTc2LDAgLTMyMCwtMTQ0IC0zMjAsLTMyMGwwIC0zMjAgMCAtMjMyNmM5NCw1NSAyMDQs
        ODYgMzIwLDg2eiIgZmlsbD0iI0VEOUE1NiIgaWQ9ImN1cnZlMiIgLz4NCiAgPHBhdGggZD0iTTE5MjAg
        NTc2MGw2NDAwIDAgMCAzMjBjMCwxNzYgLTE0NCwzMjAgLTMyMCwzMjBsLTU3NjAgMGMtMTc2LDAgLTMy
        MCwtMTQ0IC0zMjAsLTMyMGwwIC0zMjB6IiBmaWxsPSIjODA4MDgwIiBpZD0iY3VydmUxIiAvPg0KICA8
        cGF0aCBkPSJNMjU2MCA0NDgwYzk2MCwwIDE2MDAsLTI1NSAxNjAwLC05NjAgMCwtOTYwIC0zMjAsLTk2
        MCAtMzIwLC0xOTIwIDAsLTk2MCA2NDAsLTEyODAgMTI4MCwtMTI4MCA2NDAsMCAxMjgwLDMyMCAxMjgw
        LDEyODAgMCw5NjAgLTMyMCw5NjAgLTMyMCwxOTIwIDAsNzA1IDY0MCw5NjAgMTYwMCw5NjAgMzUzLDAg
        NjQwLDI4OCA2NDAsNjQwbDAgMzIwIC02NDAwIDAgMCAtMzIwYzAsLTM1MyAyODcsLTY0MCA2NDAsLTY0
        MHptMjU2MCAtMzUyMGMtMzUzLDAgLTY0MCwyODcgLTY0MCw2NDAgMCwzNTMgMjg3LDY0MCA2NDAsNjQw
        IDM1MywwIDY0MCwtMjg3IDY0MCwtNjQwIDAsLTM1MyAtMjg3LC02NDAgLTY0MCwtNjQweiIgZmlsbD0i
        IzgwODA4MCIgaWQ9ImN1cnZlMCIgLz4NCjwvc3ZnPgs=
</value>
  </data>
</root>